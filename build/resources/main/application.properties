# Postcoder RESTful webservices endpoints
# See more https://developers.alliescomputing.com/postcoder-web-api/address-lookup/eircode
#
# Irish and UK address lookup
postcoder.address.host=http://ws.postcoder.com
#
postcoder.address.path=/pcw/{api-key}/address/{country}/{eircode-or-address-fragment}
#
# Level for loggers on classes inside the root package
# Available levels are: TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
logging.level.org.eircodeapicached.address = TRACE
#

# REDIS
# The host where redis is running - needs to be defined if different from localhost
spring.redis.host=192.168.99.100
#spring.redis.port=6379
#spring.redis.cluster.max-redirects= # Maximum number of redirects to follow when executing commands across the cluster.
#spring.redis.cluster.nodes= # Comma-separated list of "host:port" pairs to bootstrap from.
#spring.redis.database=0 # Database index used by the connection factory.
#spring.redis.password= # Login password of the redis server.
#spring.redis.pool.max-active=8 # Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
#spring.redis.pool.max-idle=8 # Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
#spring.redis.pool.max-wait=-1 # Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
#spring.redis.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
#spring.redis.sentinel.master= # Name of Redis server.
#spring.redis.sentinel.nodes= # Comma-separated list of host:port pairs.
#spring.redis.timeout=0 # Connection timeout in milliseconds.
